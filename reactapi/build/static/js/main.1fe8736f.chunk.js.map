{"version":3,"sources":["pages/MatchDetails.js","pages/Matches.js","pages/About.js","pages/Contact.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["MatchDetails","props","goBack","bind","console","log","match","params","title","state","isLoaded","fetch","then","res","json","setState","filter","item","this","history","className","onClick","id","Card","text","style","width","Header","side1","name","side2","competition","date","substring","dangerouslySetInnerHTML","__html","videos","embed","href","url","target","React","Component","Matches","matches","filtered","classNameName","map","Body","Row","key","Col","md","src","thumbnail","height","alt","to","pathname","About","Contact","action","method","enctype","type","size","value","NavBar","handleChange","event","handleSubmit","alert","preventDefault","Navbar","Brand","heading","Nav","Link","Form","onSubmit","inline","FormControl","placeholder","onChange","Button","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fe8736f.chunk.js","sourcesContent":["import '../App.css';\nimport {Card, Row, Col, Container} from 'react-bootstrap';\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom';\nimport React, {Component} from 'react'\n\nclass MatchDetails extends React.Component {\n  // Creating objects\n  constructor(props) {\n    super(props)\n    /* Binding this to the goBack function so that\n    it can be called when a button is clicked */\n    this.goBack = this.goBack.bind(this);\n    // Checking to see the parameters are being logged\n    console.log(this.props.match.params.title)\n    // Declaring state object\n    this.state = {\n      // Setting key value pairs\n      match: {},\n      isLoaded: false,\n      title: this.props.title\n    };\n  }\n\n  // Called once the component is mounted to the DOM\n  componentDidMount() {\n    // Gets the json object from API & returns as promise with json content\n    fetch(\"https://www.scorebat.com/video-api/v1/\").then(res => res.json())\n    // Loops through array of matches and filters by the title passed in through props\n      .then(json => {\n      this.setState({\n        match: json.filter(item => item.title == this.props.match.params.title)\n      })\n    });\n  }\n\n  // Function to return to previous page\n  goBack() {\n    this.props.history.goBack();\n  }\n\n  render() {\n    console.log(this.state.match);\n    if (this.state.match[0] != null) {\n      return (<div>\n        <br/><br/><br/>\n        <div className=\"space\"></div>\n        <button className=\"goBack\" onClick={this.goBack}>Go Back</button>\n        <br/>< br/>< br/>\n        <ul id=\"listone\">\n          <Card className=\"card\" text=\"white\" style={{width: '50rem'}}>\n            <Card.Header>{this.state.match[0].side1.name}<p className=\"matchescore\"> VS\n              </p> {this.state.match[0].side2.name}</Card.Header>\n            <br/>\n            <p className=\"viewdetails1\">LEAGUE\n              <p className=\"matchescore\"> | </p>\n              {this.state.match[0].competition.name}</p>\n            <p className=\"viewdetails2\">{this.state.match[0].date.substring(0, 10)}</p><br/>\n            <div className=\"video\">\n              <p dangerouslySetInnerHTML={{__html: this.state.match[0].videos[0].embed}}></p>\n            </div>\n            <br/>\n            <p className=\"viewdetails\">HIGHLIGHTS</p>\n            <p className=\"viewdetails2\">{this.state.match[0].videos[0].title}</p>\n            <br/>\n            <a className=\"viewdetails3\" href={this.state.match[0].url} target=\"_blank\">View on Scorebat</a>\n            <br/><br/>\n          </Card>\n        </ul>\n        <br/>< br/>< br/>\n      </div>\n    );\n    } else {\n      return (<div className=\"loading\">\n        Loading...\n      </div>);\n    }\n  }\n}\n\nexport default MatchDetails;\n","import React, {Component} from 'react'\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport {Card, Row, Col, Container, Button} from 'react-bootstrap';\n\nclass Matches extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      matches: [],\n      isLoaded: false,\n      filtered: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.scorebat.com/video-api/v1/\").then(res => res.json()).then(json => {\n      this.setState({isLoaded: true, matches: json})\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      matches\n    } = this.state;\n\n    //filter matches by search keyword\n    // var searchWord =\"Pyunik - Shirak\";\n\n    // find method similar to .contains instead of searchword -- contains(searchWord)\n    // var filteredMatches = this.state.matches.filter(match => match.title==searchWord);\n\n    if (!isLoaded) {\n      return <div classNameName=\"loading\">Loading...</div>;\n    } else {\n\n      return (<div classNameName=\"App\">\n        <br/>< br/>< br/>< br/>< br/>\n        <Card classNameName=\"topcard\" text=\"white\" style={{width: '37rem'}}>\n          <Card.Header>LATEST FIXTURES</Card.Header>\n        </Card>\n        {\n          // filteredMatches.map for search function\n          matches.map((match, id) => (<div classNameName=\"App\">\n            <Card classNameName=\"card\" text=\"white\" style={{width: '37rem'}}>\n              <Card.Body>\n                <div>\n                  <div>\n                    <Row key={id}>\n                      <Col md=\"auto\">\n                        <img className=\"image\" src={match.thumbnail} height=\"150\" alt=\"\"/>\n                      </Col>\n                      <Col md=\"auto\">\n                        <p>{match.competition.name.substring(0, 24)}</p>< br/>\n                        <p>{match.title.substring(0, 30)}</p>< br/>< br/>\n                        <Link className=\"link\" to={{pathname: `/MatchDetails/${match.title}`}}>\n                          <p className=\"matchescore\">Match Score</p>\n                        </Link>< br/>\n                        <p>{match.videos[0].title}</p>< br/>\n                        <p>{match.date.substring(0, 10)}</p>< br/>< br/>\n                      </Col>\n                    </Row>\n                  </div>\n                </div>\n              </Card.Body>\n            </Card>\n            <br/>< br/>< br/>\n          </div>))\n        }\n      </div>);\n    }\n  }\n}\n\nexport default Matches;\n","import '../App.css';\nimport { Card, Row, Col, Container } from 'react-bootstrap';\nimport React, {Component} from 'react'\n\nclass About extends React.Component {\n\n  render() {\n  return(\n    <div className=\"App\">\n    <br />< br/>< br/>< br/>< br/>\n    <div className=\"App\">\n    <Card className=\"card\" text=\"white\" style={{ width: '65rem', height: '30rem' }}>\n    <Card.Body>\n          <div>\n            <div>\n            <Row>\n            <Col md=\"auto\">\n            <div className=\"aboutimg\"> </div>\n            </Col>\n            <Col>\n            <h1>About LiveScore</h1>\n              <p>Live score is a type of service offered by many sports-related\n               websites and broadcasters as well as online sports betting operators.<br/><br/>\n               The idea of live scores is to provide real time info about sports\n               results from various disciplines. Live scores like this are usually free and are very\n               popular among sports betting enthusiasts, as they allow viewing collected data\n               on many sports events. <a className=\"matchescore\" href=\"https://en.wikipedia.org/wiki/Live_scores\">[1]</a>\n               <br/><br/> You can view any match from the list provided on\n               the homepage showing all latest matches in top tier football. Then, simply by\n               clicking Match Score, you can view highlights and live action videos from\n               that particular match. By clicking the View on scorebat link at the bottom of\n               any match details page, you can also view any further info about this\n               fixture on Scorebat.com<br/><br/></p>\n              </Col>\n              </Row>\n              </div>\n            </div>\n      </Card.Body>\n    </Card>\n    <br />< br/>< br/>\n    </div>\n    </div>\n  );\n  }\n}\n\nexport default About;\n","import '../App.css';\nimport { Card, Row, Col, Container } from 'react-bootstrap';\nimport React, {Component} from 'react'\n\nclass Contact extends React.Component {\n\nrender() {\n  return(\n    <div className=\"contactApp\">\n    <br />< br/>< br/>< br/>< br/>\n    <Card className=\"topcard2\" text=\"white\" style={{ width: '35rem' }}>\n    <Card.Header>CONTACT US</Card.Header>\n    </Card>\n    <Card className=\"contactcard\" text=\"white\" style={{ width: '35rem' }}>\n    <Card.Body>\n    <div>\n    <div>\n    <Row>\n    <div className=\"centred\">\n    <Col md=\"auto\">\n    <p>Send e-mail to livescorefeedback@gmail.com</p>\n    </Col>\n    </div>\n    </Row><br />\n    <form action=\"mailto:someone@example.com\" method=\"post\" enctype=\"text/plain\">\n    <Row>\n    <div className=\"centred\">\n    <Col md=\"auto\">\n    <p>First Name</p><br />\n    <input type=\"text\" name=\"Firstname\"/>\n    </Col>\n    <Col md=\"auto\">\n    <p>Last Name</p><br />\n    <input type=\"text\" name=\"Lastname\"/>\n    </Col>\n    </div>\n    </Row><br />\n    <Row>\n    <div className=\"centred\">\n    <Col md=\"auto\">\n    <p>Email</p><br />\n    <input type=\"text\" name=\"mail\" style={{ width: '24rem' }}/>\n    </Col>\n    </div>\n    </Row><br />\n    <Row>\n    <div className=\"centred\">\n    <Col md=\"auto\">\n    <p>Comment</p><br />\n    <textarea name=\"comment\" size=\"50\" style={{ width: '24rem' }}></textarea>\n    </Col>\n    </div>\n    </Row><br />\n    <Row>\n    <div className=\"centred\">\n    <Col md=\"auto\">\n    <input type=\"submit\" value=\"Send\"/>\n    <div className=\"gap\"></div>\n    <input type=\"reset\" value=\"Reset\"/>\n    </Col>\n    </div>\n    </Row>\n    </form>\n    <br />< br/>\n    </div>\n    </div>\n    </Card.Body>\n    </Card>\n    <br />< br/>< br/>\n    </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport '../App.css';\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavDropdown,\n  MenuItem,\n  FormControl,\n  Form,\n  Button\n} from 'react-bootstrap';\n\n// NavBar class is defined\nclass NavBar extends React.Component {\n  // Initializes an object's state in a class (NavBar)\n  constructor(props) {\n    // Used to pass props to the parent constructor\n    super(props)\n    this.state = { match: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({ match: event });\n  };\n\n  handleSubmit = event => {\n    alert(\"match is: \" + this.state.match);\n    event.preventDefault();\n  };\n\n  render() { // Transforms React components into DOM nodes that the browser use\n    return ( // The output method of render\n        <Navbar className=\"nav fixed-top\">\n          <div className=\"icon\"></div>\n          <Navbar.Brand href=\"/\">{this.props.heading}</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"About\">About</Nav.Link>\n            <Nav.Link href=\"Contact\">Contact</Nav.Link>\n          </Nav>\n          <Form onSubmit={this.handleSubmit} inline=\"inline\">\n            <FormControl type=\"text\" placeholder=\"Search\"\n              onChange={this.handleChange} className=\"mr-sm-2\"/>\n            <Button className=\"search\" type=\"submit\" value=\"Submit\">Search</Button>\n          </Form>\n        </Navbar>);\n  }\n}\n\n// Exports the NavBar class\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport MatchDetails from './pages/MatchDetails'\nimport Matches from './pages/Matches'\nimport About from './pages/About'\nimport Contact from './pages/Contact'\nimport NavBar from './components/Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Row, Col, Container } from 'react-bootstrap';\n\nclass App extends React.Component {\n  render() {\n    return (\n    <BrowserRouter>\n    <NavBar heading=\"LiveScore\" />\n    <Switch>\n     <Route exact path=\"/\" component={Matches}/>\n     <Route exact path=\"/About\" component={About}/>\n     <Route exact path=\"/Contact\" component={Contact}/>\n     <Route exact path=\"/MatchDetails/:title\" component={MatchDetails}/>\n     </Switch>\n     </BrowserRouter>\n   );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}